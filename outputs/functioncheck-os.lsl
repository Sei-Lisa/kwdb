string outp;

default
{
    state_entry()
    {
        outp = "\nFunctions test compiled on " + llGetDate() + " in " + llGetEnv("sim_channel") + " " + llGetEnv("sim_version");
        outp += "\nGenerated by LSL2 Derived Files Generator. Database version: 0.0.20240528000; output module version: 0.0.20230603000";
        outp += "\nFunctions test compiled successfully.";
        llOwnerSay(outp);
    }

    state_exit()
    {
        integer i;
        float f;
        string s;
        key k;
        vector v;
        rotation r;
        list l;
f = llSin(f);
f = llCos(f);
f = llTan(f);
f = llAtan2(f,f);
f = llSqrt(f);
f = llPow(f,f);
i = llAbs(i);
f = llFabs(f);
f = llFrand(f);
i = llFloor(f);
i = llCeil(f);
i = llRound(f);
f = llVecMag(v);
v = llVecNorm(v);
f = llVecDist(v,v);
v = llRot2Euler(r);
r = llEuler2Rot(v);
r = llAxes2Rot(v,v,v);
v = llRot2Fwd(r);
v = llRot2Left(r);
v = llRot2Up(r);
r = llRotBetween(v,v);
llWhisper(i,s);
llSay(i,s);
llShout(i,s);
i = llListen(i,s,k,s);
llListenControl(i,i);
llListenRemove(i);
llSensor(s,k,i,f,f);
llSensorRepeat(s,k,i,f,f,f);
llSensorRemove();
s = s + llDetectedName(i);
k = llDetectedKey(i);
k = llDetectedOwner(i);
i = llDetectedType(i);
v = llDetectedPos(i);
v = llDetectedVel(i);
v = llDetectedGrab(i);
r = llDetectedRot(i);
i = llDetectedGroup(i);
i = llDetectedLinkNumber(i);
llDie();
f = llGround(v);
f = llCloud(v);
v = llWind(v);
llSetStatus(i,i);
i = llGetStatus(i);
llSetScale(v);
v = llGetScale();
llSetColor(v,i);
f = llGetAlpha(i);
llSetAlpha(f,i);
v = llGetColor(i);
llSetTexture(s,i);
llScaleTexture(f,f,i);
llOffsetTexture(f,f,i);
llRotateTexture(f,i);
s = s + llGetTexture(i);
llSetPos(v);
v = llGetPos();
v = llGetLocalPos();
llSetRot(r);
r = llGetRot();
r = llGetLocalRot();
llSetForce(v,i);
v = llGetForce();
i = llTarget(v,f);
llTargetRemove(i);
i = llRotTarget(r,f);
llRotTargetRemove(i);
llMoveToTarget(v,f);
llStopMoveToTarget();
llApplyImpulse(v,i);
llApplyRotationalImpulse(v,i);
llSetTorque(v,i);
v = llGetTorque();
llSetForceAndTorque(v,v,i);
v = llGetVel();
v = llGetAccel();
v = llGetOmega();
f = llGetTimeOfDay();
f = llGetWallclock();
f = llGetTime();
llResetTime();
f = llGetAndResetTime();
llSound(s,f,i,i);
llPlaySound(s,f);
llLoopSound(s,f);
llLoopSoundMaster(s,f);
llLoopSoundSlave(s,f);
llPlaySoundSlave(s,f);
llTriggerSound(s,f);
llStopSound();
llPreloadSound(s);
s = s + llGetSubString(s,i,i);
s = s + llDeleteSubString(s,i,i);
s = s + llInsertString(s,i,s);
s = s + llToUpper(s);
s = s + llToLower(s);
i = llGiveMoney(k,i);
llMakeExplosion(i,f,f,f,f,s,v);
llMakeFountain(i,f,f,f,f,i,s,v,f);
llMakeSmoke(i,f,f,f,f,s,v);
llMakeFire(i,f,f,f,f,s,v);
llRezObject(s,v,v,r,i);
llLookAt(v,f,f);
llStopLookAt();
llSetTimerEvent(f);
llSleep(f);
f = llGetMass();
llCollisionFilter(s,k,i);
llTakeControls(i,i,i);
llReleaseControls();
llAttachToAvatar(i);
llDetachFromAvatar();
llTakeCamera(k);
llReleaseCamera(k);
k = llGetOwner();
llInstantMessage(k,s);
llEmail(s,s,s);
llGetNextEmail(s,s);
k = llGetKey();
llSetBuoyancy(f);
llSetHoverHeight(f,i,f);
llStopHover();
llMinEventDelay(f);
llSoundPreload(s);
llRotLookAt(r,f,f);
i = llStringLength(s);
llStartAnimation(s);
llStopAnimation(s);
llPointAt(v);
llStopPointAt();
llTargetOmega(v,f,f);
i = llGetStartParameter();
llGodLikeRezObject(k,v);
llRequestPermissions(k,i);
k = llGetPermissionsKey();
i = llGetPermissions();
i = llGetLinkNumber();
llSetLinkColor(i,v,i);
llCreateLink(k,i);
llBreakLink(i);
llBreakAllLinks();
k = llGetLinkKey(i);
s = s + llGetLinkName(i);
i = llGetInventoryNumber(i);
s = s + llGetInventoryName(i,i);
llSetScriptState(s,i);
f = llGetEnergy();
llGiveInventory(k,s);
llRemoveInventory(s);
llSetText(s,v,f);
f = llWater(v);
llPassTouches(i);
k = llRequestAgentData(k,i);
k = llRequestInventoryData(s);
llSetDamage(f);
llTeleportAgentHome(k);
llModifyLand(i,i);
llCollisionSound(s,f);
llCollisionSprite(s);
s = s + llGetAnimation(k);
llResetScript();
llMessageLinked(i,i,s,k);
llPushObject(k,v,v,i);
llPassCollisions(i);
s = s + llGetScriptName();
i = llGetNumberOfSides();
r = llAxisAngle2Rot(v,f);
v = llRot2Axis(r);
f = llRot2Angle(r);
f = llAcos(f);
f = llAsin(f);
f = llAngleBetween(r,r);
k = llGetInventoryKey(s);
llAllowInventoryDrop(i);
v = llGetSunDirection();
v = llGetTextureOffset(i);
v = llGetTextureScale(i);
f = llGetTextureRot(i);
i = llSubStringIndex(s,s);
k = llGetOwnerKey(k);
v = llGetCenterOfMass();
l = llListSort(l,i,i);
i = llGetListLength(l);
i = llList2Integer(l,i);
f = llList2Float(l,i);
s = s + llList2String(l,i);
k = llList2Key(l,i);
v = llList2Vector(l,i);
r = llList2Rot(l,i);
l = llList2List(l,i,i);
l = llDeleteSubList(l,i,i);
i = llGetListEntryType(l,i);
s = s + llList2CSV(l);
l = llCSV2List(s);
l = llListRandomize(l,i);
l = llList2ListStrided(l,i,i,i);
v = llGetRegionCorner();
l = llListInsertList(l,l,i);
i = llListFindList(l,l);
s = s + llGetObjectName();
llSetObjectName(s);
s = s + llGetDate();
i = llEdgeOfWorld(v,v);
i = llGetAgentInfo(k);
llAdjustSoundVolume(f);
llSetSoundQueueing(i);
llSetSoundRadius(f);
s = s + llKey2Name(k);
llSetTextureAnim(i,i,i,i,f,f,f);
llTriggerSoundLimited(s,f,v,v);
llEjectFromLand(k);
l = llParseString2List(s,l,l);
i = llOverMyLand(k);
k = llGetLandOwnerAt(v);
k = llGetNotecardLine(s,i);
v = llGetAgentSize(k);
i = llSameGroup(k);
llUnSit(k);
v = llGroundSlope(v);
v = llGroundNormal(v);
v = llGroundContour(v);
i = llGetAttached();
i = llGetFreeMemory();
s = s + llGetRegionName();
f = llGetRegionTimeDilation();
f = llGetRegionFPS();
llParticleSystem(l);
llGroundRepel(f,i,f);
llGiveInventoryList(k,s,l);
llSetVehicleType(i);
llSetVehicleFloatParam(i,f);
llSetVehicleVectorParam(i,v);
llSetVehicleRotationParam(i,r);
llSetVehicleFlags(i);
llRemoveVehicleFlags(i);
llSitTarget(v,r);
k = llAvatarOnSitTarget();
llAddToLandPassList(k,f);
llSetTouchText(s);
llSetSitText(s);
llSetCameraEyeOffset(v);
llSetCameraAtOffset(v);
s = s + llDumpList2String(l,s);
i = llScriptDanger(v);
llDialog(k,s,l,i);
llVolumeDetect(i);
llResetOtherScript(s);
i = llGetScriptState(s);
llRemoteLoadScript(k,s,i,i);
llSetRemoteScriptAccessPin(i);
llRemoteLoadScriptPin(k,s,i,i,i);
llOpenRemoteDataChannel();
k = llSendRemoteData(k,s,i,s);
llRemoteDataReply(k,k,s,i);
llCloseRemoteDataChannel(k);
s = s + llMD5String(s,i);
llSetPrimitiveParams(l);
s = s + llStringToBase64(s);
s = s + llBase64ToString(s);
s = s + llXorBase64Strings(s,s);
llRemoteDataSetRegion();
f = llLog10(f);
f = llLog(f);
l = llGetAnimationList(k);
llSetParcelMusicURL(s);
v = llGetRootPosition();
r = llGetRootRotation();
s = s + llGetObjectDesc();
llSetObjectDesc(s);
k = llGetCreator();
s = s + llGetTimestamp();
llSetLinkAlpha(i,f,i);
i = llGetNumberOfPrims();
k = llGetNumberOfNotecardLines(s);
l = llGetBoundingBox(k);
v = llGetGeometricCenter();
l = llGetPrimitiveParams(l);
s = s + llIntegerToBase64(i);
i = llBase64ToInteger(s);
f = llGetGMTclock();
s = s + llGetSimulatorHostname();
llSetLocalRot(r);
l = llParseStringKeepNulls(s,l,l);
llRezAtRoot(s,v,v,r,i);
i = llGetObjectPermMask(i);
llSetObjectPermMask(i,i);
i = llGetInventoryPermMask(s,i);
llSetInventoryPermMask(s,i,i);
k = llGetInventoryCreator(s);
llOwnerSay(s);
k = llRequestSimulatorData(s,i);
llForceMouselook(i);
f = llGetObjectMass(k);
l = llListReplaceList(l,l,i,i);
llLoadURL(k,s,s);
llParcelMediaCommandList(l);
l = llParcelMediaQuery(l);
i = llModPow(i,i,i);
i = llGetInventoryType(s);
llSetPayPrice(i,l);
v = llGetCameraPos();
r = llGetCameraRot();
llSetPrimURL(s);
llRefreshPrimURL();
s = s + llEscapeURL(s);
s = s + llUnescapeURL(s);
llMapDestination(s,v,v);
llAddToLandBanList(k,f);
llRemoveFromLandPassList(k);
llRemoveFromLandBanList(k);
llSetCameraParams(l);
llClearCameraParams();
f = llListStatistics(i,l);
i = llGetUnixTime();
i = llGetParcelFlags(v);
i = llGetRegionFlags();
s = s + llXorBase64StringsCorrect(s,s);
k = llHTTPRequest(s,l,s);
llResetLandBanList();
llResetLandPassList();
i = llGetObjectPrimCount(k);
l = llGetParcelPrimOwners(v);
i = llGetParcelPrimCount(v,i,i);
i = llGetParcelMaxPrims(v,i);
l = llGetParcelDetails(v,l);
llSetLinkPrimitiveParams(i,l);
llSetLinkTexture(i,s,i);
s = s + llStringTrim(s,i);
llRegionSay(i,s);
l = llGetObjectDetails(k,l);
llSetClickAction(i);
i = llGetRegionAgentCount();
llTextBox(k,s,i);
s = s + llGetAgentLanguage(k);
v = llDetectedTouchUV(i);
i = llDetectedTouchFace(i);
v = llDetectedTouchPos(i);
v = llDetectedTouchNormal(i);
v = llDetectedTouchBinormal(i);
v = llDetectedTouchST(i);
s = s + llSHA1String(s);
i = llGetFreeURLs();
k = llRequestURL();
k = llRequestSecureURL();
llReleaseURL(s);
llHTTPResponse(k,i,s);
s = s + llGetHTTPHeader(k,s);
i = llSetPrimMediaParams(i,l);
l = llGetPrimMediaParams(i,l);
i = llClearPrimMedia(i);
llSetLinkPrimitiveParamsFast(i,l);
l = llGetLinkPrimitiveParams(i,l);
llLinkParticleSystem(i,l);
llSetLinkTextureAnim(i,i,i,i,i,f,f,f);
i = llGetLinkNumberOfSides(i);
s = s + llGetUsername(k);
k = llRequestUsername(k);
s = s + llGetDisplayName(k);
k = llRequestDisplayName(k);
s = s + llGetEnv(s);
llRegionSayTo(k,i,s);
i = llSetMemoryLimit(i);
i = llGetMemoryLimit();
i = llSetLinkMedia(i,i,l);
l = llGetLinkMedia(i,i,l);
i = llClearLinkMedia(i,i);
llSetLinkCamera(i,v,v);
llSetContentType(k,i);
llLinkSitTarget(i,v,r);
k = llAvatarOnLinkSitTarget(i);
llSetVelocity(v,i);
l = llCastRay(v,v,l);
f = llGetMassMKS();
llSetPhysicsMaterial(i,f,f,f,f);
l = llGetPhysicsMaterial();
i = llManageEstateAccess(i,k);
llSetKeyframedMotion(l,l);
k = llTransferLindenDollars(k,i);
s = s + llGetParcelMusicURL();
llScriptProfiler(i);
i = llGetSPMaxMemory();
i = llGetUsedMemory();
llSetAngularVelocity(v,i);
i = llSetRegionPos(v);
l = llGetAgentList(i,l);
llAttachToAvatarTemp(i);
llTeleportAgent(k,s,v,v);
llTeleportAgentGlobalCoords(k,v,v,v);
k = llGenerateKey();
llSetAnimationOverride(s,s);
s = s + llGetAnimationOverride(s);
llResetAnimationOverride(s);
l = llJson2List(s);
s = s + llList2Json(s,l);
s = s + llJsonGetValue(s,l);
s = s + llJsonSetValue(s,l,s);
s = s + llJsonValueType(s,l);
s = s + llXorBase64(s,s);
i = llScaleByFactor(f);
f = llGetMinScaleFactor();
f = llGetMaxScaleFactor();
l = llGetAttachedList(k);
k = llName2Key(s);
k = llRequestUserKey(s);
llStartObjectAnimation(s);
llStopObjectAnimation(s);
l = llGetObjectAnimationNames();
i = llGetDayLength();
i = llGetDayOffset();
i = llGetRegionDayLength();
i = llGetRegionDayOffset();
r = llGetMoonRotation();
r = llGetRegionMoonRotation();
r = llGetRegionSunRotation();
r = llGetSunRotation();
v = llGetMoonDirection();
v = llGetRegionMoonDirection();
v = llGetRegionSunDirection();
llTargetedEmail(i,s,s);
i = llOrd(s,i);
s = s + llChar(i);
i = llHash(s);
l = lsGetWindlightScene(l);
i = lsSetWindlightScene(l);
i = lsSetWindlightSceneTargeted(l,k);
lsClearWindlightScene();
s = s + osSetDynamicTextureURL(s,s,s,s,i);
s = s + osSetDynamicTextureURLBlend(s,s,s,s,i,i);
s = s + osSetDynamicTextureURLBlendFace(s,s,s,s,i,i,i,i,i);
s = s + osSetDynamicTextureData(s,s,s,s,i);
s = s + osSetDynamicTextureDataFace(s,s,s,s,i,i);
s = s + osSetDynamicTextureDataBlend(s,s,s,s,i,i);
s = s + osSetDynamicTextureDataBlendFace(s,s,s,s,i,i,i,i,i);
f = osGetTerrainHeight(i,i);
f = osTerrainGetHeight(i,i);
i = osSetTerrainHeight(i,i,f);
i = osTerrainSetHeight(i,i,f);
osTerrainFlush();
i = osRegionRestart(f);
osRegionNotice(s);
osRegionNotice(k,s);
i = osConsoleCommand(s);
osSetParcelMusicURL(s);
osSetParcelMediaURL(s);
osSetPrimFloatOnWater(i);
osSetParcelSIPAddress(s);
s = s + osGetAgentIP(s);
l = osGetAgents();
osLocalTeleportAgent(k,v,v,v,i);
osTeleportAgent(s,s,v,v);
osTeleportAgent(s,i,i,v,v);
osTeleportAgent(s,v,v);
osTeleportOwner(s,v,v);
osTeleportOwner(i,i,v,v);
osTeleportOwner(v,v);
osAvatarPlayAnimation(k,s);
osAvatarStopAnimation(k,s);
osForceAttachToAvatar(i);
osForceAttachToAvatarFromInventory(s,i);
osForceAttachToOtherAvatarFromInventory(s,s,i);
osForceDetachFromAvatar();
s = s + osGetAvatarHomeURI(s);
l = osGetNumberOfAttachments(k,l);
osForceOtherSit(s,s);
osMessageAttachments(k,s,l,i);
s = s + osMovePen(s,i,i);
s = s + osDrawLine(s,i,i,i,i);
s = s + osDrawLine(s,i,i);
s = s + osDrawText(s,s);
s = s + osDrawEllipse(s,i,i);
s = s + osDrawFilledEllipse(s,i,i);
s = s + osDrawRectangle(s,i,i);
s = s + osDrawFilledRectangle(s,i,i);
s = s + osDrawPolygon(s,l,l);
s = s + osDrawFilledPolygon(s,l,l);
s = s + osDrawResetTransform(s);
s = s + osDrawRotationTransform(s,f);
s = s + osDrawScaleTransform(s,f,f);
s = s + osDrawTranslationTransform(s,f,f);
s = s + osSetFontName(s,s);
s = s + osSetFontSize(s,i);
s = s + osSetPenSize(s,i);
s = s + osSetPenColor(s,s);
s = s + osSetPenColour(s,s);
s = s + osSetPenCap(s,s,s);
s = s + osDrawImage(s,i,i,s);
v = osGetDrawStringSize(s,s,s,i);
osSetRegionWaterHeight(f);
osSetRegionSunSettings(i,i,f);
osSetEstateSunSettings(i,f);
f = osGetCurrentSunHour();
f = osGetSunParam(s);
f = osSunGetParam(s);
osSetSunParam(s,f);
osSunSetParam(s,f);
s = s + osWindActiveModelPluginName();
osSetWindParam(s,s,f);
f = osGetWindParam(s,s);
i = osGetParcelDwell(v);
osParcelJoin(v,v);
osParcelSubdivide(v,v);
osSetParcelDetails(v,l);
osParcelSetDetails(v,l);
s = s + osGetPhysicsEngineName();
s = s + osGetPhysicsEngineType();
s = s + osGetScriptEngineName();
s = s + osGetSimulatorVersion();
osMessageObject(k,s);
osMakeNotecard(s,s);
osMakeNotecard(s,l);
s = s + osGetNotecardLine(s,i);
s = s + osGetNotecard(s);
i = osGetNumberOfNotecardLines(s);
s = s + osAvatarName2Key(s,s);
s = s + osKey2Name(s);
s = s + osSHA256(s);
s = s + osGetGridNick();
s = s + osGetGridName();
s = s + osGetGridLoginURI();
s = s + osGetGridHomeURI();
s = s + osGetGridGatekeeperURI();
s = s + osGetGridCustom(s);
s = s + osFormatString(s,l);
l = osMatchString(s,s,i);
s = s + osReplaceString(s,s,s,i,i);
s = s + osLoadedCreationDate();
s = s + osLoadedCreationTime();
s = s + osLoadedCreationID();
l = osGetLinkPrimitiveParams(i,l);
i = osIsNpc(k);
k = osNpcCreate(s,s,v,s);
k = osNpcCreate(s,s,v,s,i);
k = osNpcSaveAppearance(k,s);
k = osNpcSaveAppearance(k,s,i);
osNpcLoadAppearance(k,s);
v = osNpcGetPos(k);
osNpcMoveTo(k,v);
osNpcMoveToTarget(k,v,i);
k = osNpcGetOwner(k);
r = osNpcGetRot(k);
osNpcSetRot(k,r);
osNpcStopMoveToTarget(k);
osNpcSay(k,s);
osNpcSay(k,i,s);
osNpcSayTo(k,k,i,s);
osNpcShout(k,i,s);
osNpcSit(k,k,i);
osNpcStand(k);
osNpcRemove(k);
osNpcPlayAnimation(k,s);
osNpcStopAnimation(k,s);
osNpcTouch(k,k,i);
osNpcWhisper(k,i,s);
osNpcSetProfileAbout(k,s);
osNpcSetProfileImage(k,s);
k = osOwnerSaveAppearance(s);
k = osOwnerSaveAppearance(s,i);
k = osAgentSaveAppearance(k,s);
k = osAgentSaveAppearance(k,s,i);
k = osGetMapTexture();
k = osGetRegionMapTexture(s);
v = osGetRegionSize();
l = osGetRegionStats();
i = osGetSimulatorMemory();
i = osGetSimulatorMemoryKB();
osKickAvatar(s,s,s);
osKickAvatar(k,s);
osSetSpeed(k,f);
osSetOwnerSpeed(f);
f = osGetHealth(k);
osSetHealth(k,f);
f = osGetHealRate(k);
osSetHealRate(k,f);
osCauseHealing(k,f);
osCauseDamage(k,f);
osDie(k);
l = osGetPrimitiveParams(k,l);
osSetPrimitiveParams(k,l);
osSetProjectionParams(i,k,f,f,f);
osSetProjectionParams(k,i,k,f,f,f);
osSetProjectionParams(i,i,k,f,f,f);
l = osGetAvatarList();
l = osGetNPCList();
s = s + osGetGender(k);
s = s + osUnixTimeToTimestamp(i);
osForceBreakAllLinks();
osForceBreakLink(i);
osForceCreateLink(s,i);
s = s + osGetInventoryDesc(s);
i = osInviteToGroup(k);
i = osEjectFromGroup(k);
osSetTerrainTexture(i,k);
osSetTerrainTextureHeight(i,f,f);
i = osIsUUID(s);
f = osMin(f,f);
f = osMax(f,f);
k = osGetRezzingObject();
osSetContentType(k,s);
osDropAttachment();
osForceDropAttachment();
osDropAttachmentAt(v,r);
osForceDropAttachmentAt(v,r);
i = osListenRegex(i,s,s,s,i);
i = osRegexIsMatch(s,s);
k = osRequestURL(l);
k = osRequestSecureURL(l);
i = osCheckODE();
osCollisionSound(s,f);
osVolumeDetect(i);
l = osGetInertiaData();
osClearInertia();
osSetInertia(f,v,v,r);
osSetInertiaAsBox(f,v,v,r);
osSetInertiaAsSphere(f,f,v);
osSetInertiaAsCylinder(f,f,f,v,r);
i = osTeleportObject(k,v,r,i);
i = osGetLinkNumber(s);
f = osRound(f,i);
f = osVecMagSquare(v);
f = osVecDistSquare(v,v);
f = osAngleBetween(v,v);
osAdjustSoundVolume(i,f);
osLoopSound(i,s,f);
osLoopSoundMaster(i,s,f);
osLoopSoundSlave(i,s,f);
osPlaySound(i,s,f);
osPlaySoundSlave(i,s,f);
osPreloadSound(i,s);
osSetSoundRadius(i,f);
osStopSound(i);
osTriggerSound(i,s,f);
osTriggerSoundLimited(i,s,f,v,v);
s = s + osDetectedCountry(i);
s = s + osGetAgentCountry(k);
s = s + osStringSubString(s,i);
s = s + osStringSubString(s,i,i);
i = osStringStartsWith(s,s,i);
i = osStringEndsWith(s,s,i);
i = osStringIndexOf(s,s,i);
i = osStringIndexOf(s,s,i,i,i);
i = osStringLastIndexOf(s,s,i);
i = osStringLastIndexOf(s,s,i,i,i);
s = s + osStringRemove(s,i,i);
s = s + osStringReplace(s,s,s);
i = osApproxEquals(f,f);
i = osApproxEquals(f,f,f);
i = osApproxEquals(v,v);
i = osApproxEquals(v,v,f);
i = osApproxEquals(r,r);
i = osApproxEquals(r,r,f);
k = osGetInventoryLastOwner(s);
k = osGetInventoryItemKey(s);
s = s + osGetInventoryName(k);
s = s + osGetInventoryDesc(s);
k = osGetLastChangedEventKey();
f = osGetPSTWallclock();
r = osSlerp(r,r,f);
v = osSlerp(v,v,f);
osResetAllScripts(i);
i = osIsNotValidNumber(f);
osSetSitActiveRange(f);
osSetLinkSitActiveRange(i,f);
f = osGetSitActiveRange();
f = osGetLinkSitActiveRange(i);
osSetStandTarget(v);
osSetLinkStandTarget(i,v);
v = osGetStandTarget();
v = osGetLinkStandTarget(i);
i = osClearObjectAnimations();
f = osGetApparentTime();
s = s + osGetApparentTimeString(i);
f = osGetApparentRegionTime();
s = s + osGetApparentRegionTimeString(i);
i = osReplaceAgentEnvironment(k,i,s);
i = osReplaceParcelEnvironment(i,s);
i = osReplaceRegionEnvironment(i,s,f,f,f,f,f);
i = osResetEnvironment(i,i);
osParticleSystem(l);
osLinkParticleSystem(i,l);
i = osNpcLookAt(k,i,k,v);
i = osAvatarType(k);
i = osAvatarType(s,s);
osListSortInPlace(l,i,i);
    }
}
